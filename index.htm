<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editable Happy Birthday Page</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            min-height: 100vh;
            background: linear-gradient(135deg, #8a2be2, #ff3399);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            color: #fff;
            padding: 20px;
        }
        
        #c {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }
        
        .container {
            text-align: center;
            max-width: 800px;
            z-index: 10;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            margin: 20px;
        }
        
        h1 {
            font-size: 4rem;
            margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            background: linear-gradient(45deg, #ff9a9e, #fad0c4, #fad0c4, #a18cd1);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: hue-rotate 5s linear infinite;
        }
        
        @keyframes hue-rotate {
            from { filter: hue-rotate(0deg); }
            to { filter: hue-rotate(360deg); }
        }
        
        .birthday-person {
            font-size: 2.5rem;
            margin: 20px 0;
            color: #ffde7d;
            text-shadow: 0 0 10px rgba(255, 222, 125, 0.8);
        }
        
        p {
            font-size: 1.2rem;
            line-height: 1.6;
            margin-bottom: 25px;
            max-width: 600px;
        }
        
        .cake-container {
            position: relative;
            width: 200px;
            height: 180px;
            margin: 30px auto;
        }
        
        .cake {
            position: absolute;
            width: 200px;
            height: 80px;
            background: linear-gradient(45deg, #f8b500, #fceabb);
            border-radius: 10px 10px 0 0;
            bottom: 0;
        }
        
        .cake:before {
            content: '';
            position: absolute;
            width: 220px;
            height: 40px;
            background: linear-gradient(45deg, #ff9a9e, #f6416c);
            border-radius: 10px 10px 0 0;
            bottom: 80px;
            left: -10px;
        }
        
        .candle {
            position: absolute;
            width: 10px;
            height: 40px;
            background: linear-gradient(to bottom, #fd7e14, #ffc107);
            border-radius: 5px;
            bottom: 120px;
            left: 95px;
            z-index: 2;
        }
        
        .flame {
            position: absolute;
            width: 20px;
            height: 40px;
            background: linear-gradient(to bottom, #ffde7d, #f6416c);
            border-radius: 50% 50% 20% 20%;
            bottom: 160px;
            left: 90px;
            animation: flicker 0.8s infinite alternate;
            box-shadow: 0 0 20px #ffde7d, 0 0 40px #ffde7d;
            z-index: 3;
        }
        
        @keyframes flicker {
            0% { transform: scale(1); opacity: 1; }
            100% { transform: scale(0.8); opacity: 0.8; }
        }
        
        .decoration {
            position: absolute;
            width: 15px;
            height: 15px;
            border-radius: 50%;
            background: linear-gradient(45deg, #00dbde, #fc00ff);
            animation: float 6s ease-in-out infinite;
        }
        
        @keyframes float {
            0% { transform: translateY(0) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(10deg); }
            100% { transform: translateY(0) rotate(0deg); }
        }
        
        .controls {
            display: flex;
            gap: 15px;
            margin-top: 20px;
            flex-wrap: wrap;
            justify-content: center;
        }
        
        button {
            padding: 12px 25px;
            border: none;
            border-radius: 50px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        button:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-3px);
        }
        
        .footer {
            margin-top: 30px;
            font-size: 0.9rem;
            opacity: 0.8;
            text-align: center;
        }
        
        .confetti {
            position: fixed;
            width: 10px;
            height: 10px;
            background: #ffde7d;
            opacity: 0.8;
            border-radius: 0;
            z-index: 1;
        }
        
        /* Editor Panel */
        .editor-panel {
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(10px);
            border-radius: 10px;
            padding: 20px;
            width: 300px;
            z-index: 100;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
            transform: translateX(320px);
        }
        
        .editor-panel.open {
            transform: translateX(0);
        }
        
        .editor-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.7);
            color: white;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            font-size: 1.5rem;
            cursor: pointer;
            z-index: 101;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .editor-section {
            margin-bottom: 20px;
        }
        
        .editor-section h3 {
            margin-bottom: 10px;
            color: #ffde7d;
            font-size: 1.2rem;
        }
        
        .editor-input {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid rgba(255, 255, 255, 0.3);
            background: rgba(255, 255, 255, 0.1);
            color: white;
            margin-bottom: 10px;
        }
        
        .color-picker {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
        }
        
        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid transparent;
        }
        
        .color-option.active {
            border-color: white;
        }
        
        .slider-container {
            margin-bottom: 15px;
        }
        
        .slider-container label {
            display: block;
            margin-bottom: 5px;
        }
        
        .slider {
            width: 100%;
        }
        
        /* Responsive design */
        @media (max-width: 768px) {
            h1 {
                font-size: 2.5rem;
            }
            
            .birthday-person {
                font-size: 2rem;
            }
            
            p {
                font-size: 1rem;
            }
            
            .container {
                padding: 20px;
            }
            
            .controls {
                flex-direction: column;
                align-items: center;
            }
            
            button {
                width: 100%;
            }
            
            .editor-panel {
                width: calc(100% - 40px);
                top: 80px;
                right: 20px;
                transform: translateX(calc(100% + 40px));
            }
            
            .editor-panel.open {
                transform: translateX(0);
            }
        }
    </style>
</head>
<body>
    <canvas id="c"></canvas>
    
    <button class="editor-toggle" id="editorToggle">
        <i class="fas fa-edit"></i>
    </button>
    
    <div class="editor-panel" id="editorPanel">
        <div class="editor-section">
            <h3>Text Content</h3>
            <input type="text" class="editor-input" id="titleInput" placeholder="Change title..." value="Happy Birthday!">
            <input type="text" class="editor-input" id="nameInput" placeholder="Change name..." value="To Someone Special!">
            <textarea class="editor-input" id="messageInput" placeholder="Change message..." rows="3">Wishing you a day filled with happiness and a year filled with joy. May all your dreams and wishes come true on this special day!</textarea>
        </div>
        
        <div class="editor-section">
            <h3>Background Color</h3>
            <div class="color-picker">
                <div class="color-option active" style="background: linear-gradient(135deg, #8a2be2, #ff3399);" data-bg="linear-gradient(135deg, #8a2be2, #ff3399)"></div>
                <div class="color-option" style="background: linear-gradient(135deg, #ff9a9e, #fad0c4);" data-bg="linear-gradient(135deg, #ff9a9e, #fad0c4)"></div>
                <div class="color-option" style="background: linear-gradient(135deg, #00dbde, #fc00ff);" data-bg="linear-gradient(135deg, #00dbde, #fc00ff)"></div>
                <div class="color-option" style="background: linear-gradient(135deg, #fad0c4, #a18cd1);" data-bg="linear-gradient(135deg, #fad0c4, #a18cd1)"></div>
                <div class="color-option" style="background: linear-gradient(135deg, #ffde7d, #f6416c);" data-bg="linear-gradient(135deg, #ffde7d, #f6416c)"></div>
            </div>
        </div>
        
        <div class="editor-section">
            <h3>Animation Speed</h3>
            <div class="slider-container">
                <label for="animationSpeed">Particle Speed: <span id="speedValue">0.5</span></label>
                <input type="range" min="0.1" max="2" step="0.1" value="0.5" class="slider" id="animationSpeed">
            </div>
            <div class="slider-container">
                <label for="particleCount">Particle Count: <span id="countValue">100</span></label>
                <input type="range" min="10" max="300" step="10" value="100" class="slider" id="particleCount">
            </div>
        </div>
        
        <div class="editor-section">
            <h3>Save/Load</h3>
            <button id="saveBtn" style="width: 100%; margin-bottom: 10px;">Save Settings</button>
            <button id="loadBtn" style="width: 100%;">Load Default</button>
        </div>
    </div>
    
    <div class="container">
        <h1 id="titleText">Happy Birthday!</h1>
        <div class="birthday-person" id="nameText">To Someone Dearly!</div>
        
        <div class="cake-container">
            <div class="cake"></div>
            <div class="candle"></div>
            <div class="flame"></div>
            <div class="decoration" style="top: 30px; left: 40px; animation-delay: 0s;"></div>
            <div class="decoration" style="top: 20px; left: 90px; animation-delay: 0.5s;"></div>
            <div class="decoration" style="top: 40px; left: 150px; animation-delay: 1s;"></div>
        </div>
        
        <p id="messageText">Happy 17th Birthady my luv, wishing you a day filled with happiness. May Allah grant your dreams and wishes, Love you!</p>
        
        <div class="controls">
            <button id="playMusic"><i class="fas fa-music"></i> Play Birthday Song</button>
            <button id="confettiBtn"><i class="fas fa-birthday-cake"></i> Throw Confetti</button>
            <button id="changeTheme"><i class="fas fa-palette"></i> Change Theme</button>
        </div>
        
        <div class="footer">
            <p>Made with ❤️ for your special day</p>
        </div>
    </div>

    <script>
        // Canvas animation for background
        const c = document.getElementById('c');
        const ctx = c.getContext('2d');
        
        // Set canvas size
        c.width = window.innerWidth;
        c.height = window.innerHeight;
        
        // Particles for background animation
        let particles = [];
        let particleCount = 100;
        let particleSpeed = 0.5;
        
        function initParticles() {
            particles = [];
            for (let i = 0; i < particleCount; i++) {
                particles.push({
                    x: Math.random() * c.width,
                    y: Math.random() * c.height,
                    radius: Math.random() * 2 + 1,
                    speedX: (Math.random() - 0.5) * particleSpeed,
                    speedY: (Math.random() - 0.5) * particleSpeed,
                    color: `hsl(${Math.random() * 360}, 70%, 70%)`
                });
            }
        }
        
        function animateParticles() {
            ctx.clearRect(0, 0, c.width, c.height);
            
            for (let i = 0; i < particles.length; i++) {
                const p = particles[i];
                
                // Draw particle
                ctx.beginPath();
                ctx.arc(p.x, p.y, p.radius, 0, Math.PI * 2);
                ctx.fillStyle = p.color;
                ctx.fill();
                
                // Update position
                p.x += p.speedX;
                p.y += p.speedY;
                
                // Bounce off edges
                if (p.x < 0 || p.x > c.width) p.speedX *= -1;
                if (p.y < 0 || p.y > c.height) p.speedY *= -1;
            }
            
            requestAnimationFrame(animateParticles);
        }
        
        initParticles();
        animateParticles();
        
        // Confetti function
        function createConfetti() {
            const colors = ['#ff2768', '#7a3cff', '#ffde7d', '#00dbde', '#fc00ff'];
            const confettiCount = 150;
            
            for (let i = 0; i < confettiCount; i++) {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.left = Math.random() * 100 + 'vw';
                confetti.style.top = '-10px';
                confetti.style.width = Math.random() * 10 + 5 + 'px';
                confetti.style.height = Math.random() * 10 + 5 + 'px';
                confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                confetti.style.transform = `rotate(${Math.random() * 360}deg)`;
                confetti.style.animation = `confettiFall ${Math.random() * 3 + 2}s linear forwards`;
                
                document.body.appendChild(confetti);
                
                // Remove confetti after animation
                setTimeout(() => {
                    confetti.remove();
                }, 5000);
            }
            
            // Add confetti fall animation if not already added
            if (!document.getElementById('confettiFallAnimation')) {
                const style = document.createElement('style');
                style.id = 'confettiFallAnimation';
                style.textContent = `
                    @keyframes confettiFall {
                        0% { transform: translateY(0) rotate(0deg); opacity: 1; }
                        100% { transform: translateY(100vh) rotate(360deg); opacity: 0; }
                    }
                `;
                document.head.appendChild(style);
            }
        }
        
        // Birthday song
        function playBirthdaySong() {
            // Create audio context for simple birthday melody
            const AudioContext = window.AudioContext || window.webkitAudioContext;
            const audioCtx = new AudioContext();
            
            // Simple birthday melody notes (frequencies)
            const notes = [392, 392, 440, 392, 523, 494, 392, 392, 440, 392, 587, 523];
            const durations = [0.3, 0.3, 0.6, 0.6, 0.6, 1.2, 0.3, 0.3, 0.6, 0.6, 0.6, 1.2];
            
            let time = audioCtx.currentTime;
            
            for (let i = 0; i < notes.length; i++) {
                const oscillator = audioCtx.createOscillator();
                const gainNode = audioCtx.createGain();
                
                oscillator.connect(gainNode);
                gainNode.connect(audioCtx.destination);
                
                oscillator.frequency.value = notes[i];
                oscillator.type = 'sine';
                
                gainNode.gain.setValueAtTime(0.3, time);
                gainNode.gain.exponentialRampToValueAtTime(0.01, time + durations[i]);
                
                oscillator.start(time);
                oscillator.stop(time + durations[i]);
                
                time += durations[i];
            }
        }
        
        // Theme colors
        const themes = [
            { bg: 'linear-gradient(135deg, #8a2be2, #ff3399)', name: 'Purple Pink' },
            { bg: 'linear-gradient(135deg, #ff9a9e, #fad0c4)', name: 'Peach' },
            { bg: 'linear-gradient(135deg, #00dbde, #fc00ff)', name: 'Blue Pink' },
            { bg: 'linear-gradient(135deg, #fad0c4, #a18cd1)', name: 'Lavender' },
            { bg: 'linear-gradient(135deg, #ffde7d, #f6416c)', name: 'Sunset' }
        ];
        
        let currentTheme = 0;
        
        // Editor functionality
        const editorToggle = document.getElementById('editorToggle');
        const editorPanel = document.getElementById('editorPanel');
        const titleInput = document.getElementById('titleInput');
        const nameInput = document.getElementById('nameInput');
        const messageInput = document.getElementById('messageInput');
        const titleText = document.getElementById('titleText');
        const nameText = document.getElementById('nameText');
        const messageText = document.getElementById('messageText');
        const colorOptions = document.querySelectorAll('.color-option');
        const animationSpeed = document.getElementById('animationSpeed');
        const speedValue = document.getElementById('speedValue');
        const particleCountSlider = document.getElementById('particleCount');
        const countValue = document.getElementById('countValue');
        const saveBtn = document.getElementById('saveBtn');
        const loadBtn = document.getElementById('loadBtn');
        
        // Toggle editor panel
        editorToggle.addEventListener('click', () => {
            editorPanel.classList.toggle('open');
            editorToggle.innerHTML = editorPanel.classList.contains('open') ? 
                '<i class="fas fa-times"></i>' : '<i class="fas fa-edit"></i>';
        });
        
        // Update text content
        titleInput.addEventListener('input', () => {
            titleText.textContent = titleInput.value || 'Happy Birthday!';
        });
        
        nameInput.addEventListener('input', () => {
            nameText.textContent = nameInput.value || 'To Someone Special!';
        });
        
        messageInput.addEventListener('input', () => {
            messageText.textContent = messageInput.value || 'Happy 17th Birthady my luv, wishing you a day filled with happiness. May Allah grant your dreams and wishes, Love you!';
        });
        
        // Change background color
        colorOptions.forEach(option => {
            option.addEventListener('click', () => {
                colorOptions.forEach(opt => opt.classList.remove('active'));
                option.classList.add('active');
                document.body.style.background = option.getAttribute('data-bg');
            });
        });
        
        // Update animation speed
        animationSpeed.addEventListener('input', () => {
            particleSpeed = parseFloat(animationSpeed.value);
            speedValue.textContent = particleSpeed.toFixed(1);
            
            // Update particle speeds
            particles.forEach(p => {
                p.speedX = (Math.random() - 0.5) * particleSpeed;
                p.speedY = (Math.random() - 0.5) * particleSpeed;
            });
        });
        
        // Update particle count
        particleCountSlider.addEventListener('input', () => {
            particleCount = parseInt(particleCountSlider.value);
            countValue.textContent = particleCount;
            initParticles();
        });
        
        // Save settings to localStorage
        saveBtn.addEventListener('click', () => {
            const settings = {
                title: titleInput.value,
                name: nameInput.value,
                message: messageInput.value,
                bg: document.body.style.background,
                speed: particleSpeed,
                count: particleCount
            };
            
            localStorage.setItem('birthdaySettings', JSON.stringify(settings));
            alert('Settings saved! They will be loaded automatically next time.');
        });
        
        // Load settings from localStorage
        function loadSettings() {
            const saved = localStorage.getItem('birthdaySettings');
            if (saved) {
                const settings = JSON.parse(saved);
                
                titleInput.value = settings.title;
                titleText.textContent = settings.title;
                
                nameInput.value = settings.name;
                nameText.textContent = settings.name;
                
                messageInput.value = settings.message;
                messageText.textContent = settings.message;
                
                document.body.style.background = settings.bg;
                
                animationSpeed.value = settings.speed;
                particleSpeed = settings.speed;
                speedValue.textContent = settings.speed.toFixed(1);
                
                particleCountSlider.value = settings.count;
                particleCount = settings.count;
                countValue.textContent = settings.count;
                
                initParticles();
                
                // Update active color option
                colorOptions.forEach(option => {
                    if (option.getAttribute('data-bg') === settings.bg) {
                        option.classList.add('active');
                    } else {
                        option.classList.remove('active');
                    }
                });
            }
        }
        
        // Load default settings
        loadBtn.addEventListener('click', () => {
            localStorage.removeItem('birthdaySettings');
            location.reload();
        });
        
        // Event listeners for main controls
        document.getElementById('confettiBtn').addEventListener('click', createConfetti);
        
        document.getElementById('playMusic').addEventListener('click', function() {
            playBirthdaySong();
            createConfetti();
            this.innerHTML = '<i class="fas fa-music"></i> Playing...';
            setTimeout(() => {
                this.innerHTML = '<i class="fas fa-music"></i> Play Again';
            }, 3000);
        });
        
        document.getElementById('changeTheme').addEventListener('click', function() {
            currentTheme = (currentTheme + 1) % themes.length;
            document.body.style.background = themes[currentTheme].bg;
            this.innerHTML = `<i class="fas fa-palette"></i> ${themes[currentTheme].name}`;
            
            // Update active color option
            colorOptions.forEach(option => {
                if (option.getAttribute('data-bg') === themes[currentTheme].bg) {
                    option.classList.add('active');
                } else {
                    option.classList.remove('active');
                }
            });
        });
        
        // Handle window resize
        window.addEventListener('resize', function() {
            c.width = window.innerWidth;
            c.height = window.innerHeight;
            initParticles();
        });
        
        // Initial confetti on load
        window.addEventListener('load', function() {
            setTimeout(createConfetti, 1000);
            loadSettings(); // Load saved settings if available
        });
    </script>
</body>
</html>